# Generated by Django 5.1.7 on 2025-06-02 23:23

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, unique=True)),
                ('total_events', models.IntegerField(default=0)),
                ('critical_alerts', models.IntegerField(default=0)),
                ('medium_alerts', models.IntegerField(default=0)),
                ('total_alerts', models.IntegerField(default=0)),
                ('resolved_incidents', models.IntegerField(default=0)),
                ('total_incidents', models.IntegerField(default=0)),
                ('response_time_avg', models.FloatField(default=0.0)),
                ('security_score', models.IntegerField(default=85)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='SecurityRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('rule_type', models.CharField(choices=[('signature', 'Firma'), ('anomaly', 'Anomalía'), ('threshold', 'Umbral'), ('correlation', 'Correlación')], max_length=20)),
                ('severity', models.CharField(choices=[('low', 'Baja'), ('medium', 'Media'), ('high', 'Alta'), ('critical', 'Crítica')], max_length=20)),
                ('pattern', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('ip_address', models.GenericIPAddressField(unique=True)),
                ('server_type', models.CharField(choices=[('web', 'Servidor Web'), ('database', 'Base de Datos'), ('application', 'Aplicación'), ('file', 'Archivos'), ('mail', 'Correo'), ('dns', 'DNS'), ('firewall', 'Firewall')], max_length=20)),
                ('state', models.CharField(choices=[('active', 'Activo'), ('warning', 'Advertencia'), ('critical', 'Crítico'), ('offline', 'Fuera de línea')], default='active', max_length=20)),
                ('cpu_usage', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('memory_usage', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('disk_usage', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('temperature', models.FloatField(default=0)),
                ('uptime_days', models.IntegerField(default=0)),
                ('threats_count', models.IntegerField(default=0)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('report_type', models.CharField(choices=[('security', 'Reporte de Seguridad'), ('incidents', 'Reporte de Incidentes'), ('performance', 'Reporte de Rendimiento'), ('compliance', 'Reporte de Cumplimiento'), ('threat_analysis', 'Análisis de Amenazas')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('date_from', models.DateTimeField()),
                ('date_to', models.DateTimeField()),
                ('file_path', models.FileField(blank=True, null=True, upload_to='reports/')),
                ('parameters', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SecurityEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('event_type', models.CharField(max_length=100)),
                ('source_ip', models.GenericIPAddressField()),
                ('destination_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('source_port', models.IntegerField(blank=True, null=True)),
                ('destination_port', models.IntegerField(blank=True, null=True)),
                ('protocol', models.CharField(default='TCP', max_length=20)),
                ('category', models.CharField(choices=[('authentication_failure', 'Fallo de Autenticación'), ('data_exfiltration', 'Exfiltración de Datos'), ('intrusion_attempt', 'Intento de Intrusión'), ('malware_detection', 'Detección de Malware'), ('network_anomaly', 'Anomalía de Red'), ('suspicious_activity', 'Actividad Sospechosa'), ('privilege_escalation', 'Escalación de Privilegios'), ('ddos_attack', 'Ataque DDoS'), ('sql_injection', 'Inyección SQL'), ('xss_attack', 'Ataque XSS')], max_length=50)),
                ('severity', models.CharField(choices=[('info', 'Información'), ('low', 'Baja'), ('medium', 'Media'), ('high', 'Alta'), ('critical', 'Crítica')], db_index=True, max_length=20)),
                ('state', models.CharField(choices=[('new', 'Nuevo'), ('investigating', 'Investigando'), ('resolved', 'Resuelto'), ('false_positive', 'Falso Positivo'), ('closed', 'Cerrado')], db_index=True, default='new', max_length=20)),
                ('description', models.TextField()),
                ('raw_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Baja'), ('medium', 'Media'), ('high', 'Alta'), ('critical', 'Crítica')], max_length=20)),
                ('state', models.CharField(choices=[('new', 'Nuevo'), ('investigating', 'Investigando'), ('resolved', 'Resuelto'), ('closed', 'Cerrado')], default='new', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('events', models.ManyToManyField(blank=True, to='siem_app.securityevent')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('alert_type', models.CharField(choices=[('critical', 'Crítica'), ('medium', 'Media'), ('low', 'Baja'), ('info', 'Información')], max_length=20)),
                ('state', models.CharField(choices=[('active', 'Activa'), ('acknowledged', 'Reconocida'), ('resolved', 'Resuelta'), ('false_positive', 'Falso Positivo')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='siem_app.securityevent')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('level', models.CharField(choices=[('DEBUG', 'Debug'), ('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical')], db_index=True, max_length=10)),
                ('source', models.CharField(choices=[('network', 'Red'), ('application', 'Aplicación'), ('system', 'Sistema'), ('security', 'Seguridad'), ('database', 'Base de Datos')], db_index=True, max_length=20)),
                ('message', models.TextField()),
                ('user', models.CharField(blank=True, max_length=100, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('additional_data', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['timestamp', 'level'], name='siem_app_sy_timesta_1e2446_idx'), models.Index(fields=['source', 'level'], name='siem_app_sy_source_b7aaaf_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Administrador'), ('analyst', 'Analista'), ('operator', 'Operador'), ('viewer', 'Visualizador')], default='viewer', max_length=20)),
                ('department', models.CharField(blank=True, max_length=100)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('failed_login_attempts', models.IntegerField(default=0)),
                ('is_locked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['timestamp', 'severity'], name='siem_app_se_timesta_212fe6_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['source_ip', 'timestamp'], name='siem_app_se_source__7f513a_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['category', 'state'], name='siem_app_se_categor_10a5b0_idx'),
        ),
    ]
